<?php
/**
 * Eternizer.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace MU\EternizerModule\Helper;

use MU\EternizerModule\Helper\Base\AbstractNotificationHelper;
use Swift_Message;
use ModUtil;
use ServiceUtil;


/**
 * Notification helper implementation class.
 */
class NotificationHelper extends AbstractNotificationHelper
{	
	/**
	 * Collects the recipients.
	 */
	/*protected function collectRecipients()
	{
		$this->recipients = [];
	
		if ($this->recipientType == 'moderator' || $this->recipientType == 'superModerator') {
			$objectType = $this->entity['_objectType'];
			$moderatorGroupId = $this->variableApi->get('MUEternizerModule', 'moderationGroupFor' . $objectType, 2);
			if ($this->recipientType == 'superModerator') {
				$moderatorGroupId = $this->variableApi->get('MUEternizerModule', 'superModerationGroupFor' . $objectType, 2);
			}
	
			$moderatorGroup = ModUtil::apiFunc('ZikulaGroupsModule', 'user', 'get', ['gid' => $moderatorGroupId]);
			foreach (array_keys($moderatorGroup['members']) as $uid) {
				$this->addRecipient($uid);
			}
		} elseif ($this->recipientType == 'creator' && isset($this->entity['createdUserId'])) {
			$creatorUid = $this->entity['createdUserId'];
	
			$this->addRecipient($creatorUid);
		} elseif ($this->recipientType == 'creator') {
			
		}
	
		if (isset($args['debug']) && $args['debug']) {
			// add the admin, too
			$this->addRecipient(2);
		}
	}*/
	
	/**
	 * 
	 * @param object $entity
	 */
	public function moderationMailer($entity, $userId)
	{
		// create new message instance
		/** @var Swift_Message */
		$message = Swift_Message::newInstance();
		
		$serviceManager = ServiceUtil::getManager();
		

		$body = $this->__('Hallo. A new entry was submitted into the guestbook and has to get approved as appropriate.') . '<br />';
		//$url = $this->request->request->get('returnurl', $this->router->generate('mueternizermodule_entry_edit', ['id' => $entity->getId()]));
		$baseUrl = \System::getHomepageUrl();
		$url = $this->router->generate('mueternizermodule_entry_edit', ['id' => $entity->getId()]);
		$body .= '<a href=' . $baseUrl . $url . '>Zur Einreichung</a>';

		if ($userId > 2) {
			$userMail = \UserUtil::getVar('email', $userId);
		    $message->setFrom($userMail);
		
		} else {
			if ($entity->getEmail() != '') {
				$message->setFrom($entity->getEmail());
			} else {
				$message->setFrom(\ModUtil::getVar('ZConfig', 'adminmail'));
			}
		}
		$message->setTo(\ModUtil::getVar('ZConfig', 'adminmail'));
		// send the email

		$mailSent = $this->mailerApi->sendMessage($message, $this->__('New submission in the guestbook'), $body , '', true);
		if (!$mailSent) {
			$this->addFlash('error', $this->__('There was an error sending the email to our contact.'));
		}
		
		if ($userId > 2) {
		    $message2 = \Swift_Message::newInstance();
		    $body2 = $this->__('Thank you for your entry in our guestbook. Maybe we have to approve it.');
		    
		    $userMail = \UserUtil::getVar('email', $userId);
		    $message2->setTo($userMail);
		    $message2->setFrom(\ModUtil::getVar('ZConfig', 'adminmail'));
		    $mailSent2 = $this->mailerApi->sendMessage($message2,$this->__('Your submission in our guestbook'), $body2 , '', true);
		    if (!$mailSent2) {
		    	$this->addFlash('error', $this->__('There was an error sending the email to our contact.'));
		    }
		}
	}
}
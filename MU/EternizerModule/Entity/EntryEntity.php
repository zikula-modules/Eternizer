<?php
/**
 * Eternizer.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link https://homepages-mit-zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

namespace MU\EternizerModule\Entity;

use MU\EternizerModule\Entity\Base\AbstractEntryEntity as BaseEntity;
use Doctrine\ORM\Mapping as ORM;

/**
 * Entity class that defines the entity structure and behaviours.
 *
 * This is the concrete entity class for entry entities.
 * @ORM\Entity(repositoryClass="MU\EternizerModule\Entity\Repository\EntryRepository")
 * @ORM\Table(name="mu_eternizer_entry",
 *     indexes={
 *         @ORM\Index(name="workflowstateindex", columns={"workflowState"})
 *     }
 * )
 */
class EntryEntity extends BaseEntity
{
	/**
	 * 
	 * @var integer $captcha
	 */
	protected $captcha = '';
	
	/**
	 * Returns the captcha.
	 *
	 * @return integer
	 */
	public function getCaptcha()
	{
		return $this->captcha;
	}
	
	/**
	 * Sets the id.
	 *
	 * @param integer $captcha
	 *
	 * @return void
	 */
	public function setCaptcha($captcha)
	{
		if (intval($this->captcha) !== intval($captcha)) {
			$this->captcha = intval($captcha);
		}
	}
}

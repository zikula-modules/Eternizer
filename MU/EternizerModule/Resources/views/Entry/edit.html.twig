{# purpose of this template: build the form to edit an instance of entry #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'MUEternizerModule::' ~ baseTemplate ~ '.html.twig' %}

{% block header %}
    {{ parent() }}
    {{ pageAddAsset('javascript', zasset('@MUEternizerModule:js/MUEternizerModule.Validation.js'), 98) }}
    {{ pageAddAsset('javascript', zasset('@MUEternizerModule:js/MUEternizerModule.EditFunctions.js'), 99) }}
    {{ pageAddAsset('javascript', asset('typeahead/typeahead.bundle.min.js')) }}
{% endblock %}
{% set formposition = getModVar('MUEternizerModule', 'formposition') %}

{% block title mode == 'create' ? __('Create entry') : __('Edit entry') %}
{% block admin_page_icon mode == 'create' ? 'plus' : 'pencil-square-o' %}
{% block content %}
    <div class="mueternizermodule-entry mueternizermodule-edit">
        {% form_theme form with [
            '@MUEternizerModule/Form/bootstrap_3.html.twig',
            'ZikulaFormExtensionBundle:Form:form_div_layout.html.twig'
        ] %}

    {% set returnUrl = path('mueternizermodule_entry_view') %}
    {% if routeArea != 'admin' and (formposition == 'above' or formposition == 'below') %}
    {{ form_start(form, {attr: {id: 'entryEditForm'}, action: path('mueternizermodule_entry_edit', { returnTo: returnUrl }) }) }}
    {% else %}
    {{ form_start(form, {attr: {id: 'entryEditForm'} }) }}
    {% endif %}
    {{ form_errors(form) }}
    <fieldset>
    <legend>{{ __('Content') }}</legend> 
    <div class="hidden">
        {{ form_row(form.ip) }}
    </div>   
    {{ form_row(form.name) }}   
    {{ form_row(form.email) }}  
    {{ form_row(form.homepage) }}   
    {{ form_row(form.location) }}   
    {{ form_row(form.text) }}   
    <div class="hidden">
        {{ form_row(form.notes) }}
    </div>
    {% set captcha = getModVar('MUEternizerModule', 'simplecaptcha') %}
    {% if captcha and routeArea != 'admin' %}
    <div class="form-group">
        <label for="eternizerMath" class="control-label required col-sm-3">{{ __('Please solve this calculation') }}</label>
        <div class="col-sm-9">
            {{ mueternizermodule_simpleCaptcha() }}
            {# example for custom arguments:
                mueternizermodule_simpleCaptcha(font='arial', size=20, bgColour='ffffff', fgColour='0000ff')
            #}
            <input id="eternizer_captcha" class="form-control" name="captcha" type="text" size="5" maxlength="5" value="" />
            <span class="help-block">{{ __('(to prevent spam)') }}</span>
        </div>
    </div>
    {% endif %}
</fieldset>

{% if mode != 'create' %}
    {{ include('@MUEternizerModule/Helper/includeStandardFieldsEdit.html.twig', { obj: entry }) }}
{% endif %}

{# include display hooks #}
{% if mode != 'create' %}
    {% set hookId = entry.id %}
    {% set hooks = notifyDisplayHooks(eventName='mueternizermodule.ui_hooks.entries.form_edit', id=hookId) %}
{% else %}
    {% set hooks = notifyDisplayHooks(eventName='mueternizermodule.ui_hooks.entries.form_edit', id=null) %}
{% endif %}
{% if hooks is iterable and hooks|length > 0 %}
    {% for providerArea, hook in hooks %}
        {% if providerArea != 'provider.scribite.ui_hooks.editor' %}{# fix for #664 #}
            <fieldset>
                {{ hook }}
            </fieldset>
        {% endif %}
    {% endfor %}
{% endif %}

<fieldset>
    <legend>{{ __('Communication') }}</legend>
    {{ form_row(form.additionalNotificationRemarks) }}
</fieldset>

        {% if form.moderationSpecificCreator is defined %}
            <fieldset id="moderationFieldsSection">
                <legend>{{ __('Moderation') }} <i class="fa fa-expand"></i></legend>
                <div id="moderationFieldsContent">
                    {{ form_row(form.moderationSpecificCreator) }}
                    {{ form_row(form.moderationSpecificCreationDate) }}
                </div>
            </fieldset>
        {% endif %}

{# include return control #}
{% if mode == 'create' %}
    <fieldset>
        <legend>{{ __('Return control') }}</legend>
        {{ form_row(form.repeatCreation) }}
    </fieldset>
{% endif %}

{# include possible submit actions #}
<div class="form-group form-buttons">
    <div class="col-sm-offset-3 col-sm-9">
        {% for action in actions %}
            {{ form_widget(attribute(form, action.id)) }}
        {% endfor %}
        {{ form_widget(form.reset) }}
        {{ form_widget(form.cancel) }}
    </div>
</div>
{{ form_end(form) }}
</div>
{% endblock %}
{% block footer %}
    {{ parent() }}
    {% set editImage = '<span class="fa fa-pencil-square-o"></span>' %}
    {% set removeImage = '<span class="fa fa-trash-o"></span>' %}
    
    <script type="text/javascript">
    /* <![CDATA[ */
        
        ( function($) {
            $(document).ready(function() {
                // initialise auto completion for user fields
                {% if form.moderationSpecificCreator is defined %}
                    mUEternizerInitUserField('mueternizermodule_entry_moderationSpecificCreator', 'getCommonUsersList');
                {% endif %}
                mUEternizerInitEditForm('{{ mode }}', '{% if mode != 'create' %}{{ entry.id }}{% endif %}');
            });
        })(jQuery);
    /* ]]> */
    </script>
{% endblock %}
{# purpose of this template: build the form to edit an instance of entry #}
{% extends routeArea == 'admin' ? 'MUEternizerModule::adminBase.html.twig' : 'MUEternizerModule::base.html.twig' %}

{% block header %}
    {{ parent() }}
    {{ pageAddAsset('javascript', zasset('@MUEternizerModule:js/MUEternizerModule.EditFunctions.js')) }}
    {{ pageAddAsset('javascript', zasset('@MUEternizerModule:js/MUEternizerModule.Validation.js')) }}
{% endblock %}
{% set formposition = getModVar('MUEternizerModule', 'formposition') %}
{#% if formposition == 'menue' %#}
{% block title mode == 'create' ? __('Create entry') : __('Edit entry') %}
{#% endif %#}
{% block admin_page_icon mode == 'create' ? 'plus' : 'pencil-square-o' %}
{% block content %}
    <div class="mueternizermodule-entry mueternizermodule-edit">
{% form_theme form with [
    '@MUEternizerModule/Form/bootstrap_3.html.twig',
    'ZikulaFormExtensionBundle:Form:form_div_layout.html.twig'
] %}

{% set returnUrl = path('mueternizermodule_entry_view') %}
{% if routeArea != 'admin' and (formposition == 'above' or formposition == 'below') %}
{{ form_start(form, {attr: {id: 'entryEditForm'}, action: path('mueternizermodule_entry_edit', { returnTo: returnUrl }) }) }}
{% else %}
{{ form_start(form, {attr: {id: 'entryEditForm'} }) }}
{% endif %}
{{ form_errors(form) }}
<fieldset>
    <legend>{{ __('Content') }}</legend>
    
    <div class="hidden">
        {{ form_row(form.ip) }}
    </div>
    
    {{ form_row(form.name) }}
    
    {{ form_row(form.email) }}
    
    {{ form_row(form.homepage) }}
    
    {{ form_row(form.location) }}
    
    {{ form_row(form.text) }}
    
    <div class="hidden">
        {{ form_row(form.notes) }}
    </div>
    {% set captcha = getModVar('MUEternizerModule', 'simplecaptcha') %}
    {% if captcha %}
    <div class="form-group">
        <label for="eternizerMath" class="control-label required col-sm-3">{{ __('Please solve this calculation') }}</label>
        <div class="col-sm-9">
            {{ mueternizermodule_simpleCaptcha() }}
            {# example for custom arguments:
                mueternizermodule_simpleCaptcha(font='arial', size=20, bgColour='ffffff', fgColour='0000ff')
            #}
            <input id="eternizer_captcha" class="form-control" name="captcha" type="text" size="5" maxlength="5" value="" />
            <span class="help-block">{{ __('(to prevent spam)') }}</span>
        </div>
    </div>
    {% endif %}
</fieldset>

{% if mode != 'create' %}
    {{ include('@MUEternizerModule/Helper/includeStandardFieldsEdit.html.twig', { obj: entry }) }}
{% endif %}

{# include display hooks #}
{% if mode != 'create' %}
    {% set hookId = entry.id %}
    {% set hooks = notifyDisplayHooks(eventName='mueternizermodule.ui_hooks.entries.form_edit', id=hookId) %}
{% else %}
    {% set hooks = notifyDisplayHooks(eventName='mueternizermodule.ui_hooks.entries.form_edit', id=null) %}
{% endif %}
{% if hooks is iterable and hooks|length > 0 %}
    {% for providerArea, hook in hooks %}
        {% if providerArea != 'provider.scribite.ui_hooks.editor' %}{# fix for #664 #}
            <fieldset>
                {{ hook }}
            </fieldset>
        {% endif %}
    {% endfor %}
{% endif %}

<fieldset>
    <legend>{{ __('Communication') }}</legend>
    {{ form_row(form.additionalNotificationRemarks) }}
</fieldset>

{# include return control #}
{% if mode == 'create' %}
    <fieldset>
        <legend>{{ __('Return control') }}</legend>
        {{ form_row(form.repeatCreation) }}
    </fieldset>
{% endif %}

{# include possible submit actions #}
<div class="form-group form-buttons">
    <div class="col-sm-offset-3 col-sm-9">
        {% for action in actions %}
            {{ form_widget(attribute(form, action.id)) }}
        {% endfor %}
        {{ form_widget(form.reset) }}
        {{ form_widget(form.cancel) }}
    </div>
</div>
{{ form_end(form) }}
</div>
{% endblock %}
{% block footer %}
    {{ parent() }}

    {% set editImage = '<span class="fa fa-pencil-square-o"></span>' %}
    {% set deleteImage = '<span class="fa fa-trash-o"></span>' %}
    
    
    <script type="text/javascript">
    /* <![CDATA[ */
        
                var formButtons;
                var triggerValidation = true;
        
                function executeCustomValidationConstraints()
                {
                    mUEternizerPerformCustomValidationRules('entry', '{% if mode != 'create' %}{{ entry.id }}{% endif %}');
                }
        
                function triggerFormValidation()
                {
                    executeCustomValidationConstraints();
                    if (!document.getElementById('entryEditForm').checkValidity()) {
                        // This does not really submit the form,
                        // but causes the browser to display the error message
                        jQuery('#entryEditForm').find(':submit').first().click();
                    }
                }
        
                function handleFormSubmit (event) {
                    if (triggerValidation) {
                        triggerFormValidation();
                        if (!document.getElementById('entryEditForm').checkValidity()) {
                            event.preventDefault();
                            return false;
                        }
                    }
        
                    // hide form buttons to prevent double submits by accident
                    formButtons.each(function (index) {
                        jQuery(this).addClass('hidden');
                    });
        
                    return true;
                }
        
                ( function($) {
                    $(document).ready(function() {
        
                        var allFormFields = $('#entryEditForm input, #entryEditForm select, #entryEditForm textarea');
                        allFormFields.change(executeCustomValidationConstraints);
        
                        formButtons = $('#entryEditForm .form-buttons input');
                        $('.btn-danger').first().bind('click keypress', function (event) {
                            if (!window.confirm('{{ __('Really delete this entry?') }}')) {
                                event.preventDefault();
                            }
                        });
                        $('#entryEditForm button[type=submit]').bind('click keypress', function (event) {
                            triggerValidation = !$(this).attr('formnovalidate');
                        });
                        $('#entryEditForm').submit(handleFormSubmit);
        
                        {% if mode != 'create' %}
                            triggerFormValidation();
                        {% endif %}
        
                    });
                })(jQuery);
    /* ]]> */
    </script>
{% endblock %}

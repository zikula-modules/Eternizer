<?php
/**
 * Eternizer.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace MU\EternizerModule\Container;

use MU\EternizerModule\Container\Base\AbstractLinkContainer;
use Zikula\Core\LinkContainer\LinkContainerInterface;
use ModUtil;

/**
 * This is the link container service implementation class.
 */
class LinkContainer extends AbstractLinkContainer
{
	/**
	 * Returns available header links.
	 *
	 * @param string $type The type to collect links for
	 *
	 * @return array Array of header links
	 */
	public function getLinks($type = LinkContainerInterface::TYPE_ADMIN)
	{
		$utilArgs = ['api' => 'linkContainer', 'action' => 'getLinks'];
		$allowedObjectTypes = $this->controllerHelper->getObjectTypes('api', $utilArgs);
		
		$permLevel = LinkContainerInterface::TYPE_ADMIN == $type ? ACCESS_ADMIN : ACCESS_READ;
		
        $links = parent::getLinks();
        
        if (in_array('entry', $allowedObjectTypes)
        		&& $this->permissionApi->hasPermission($this->getBundleName() . ':Entry:', '::', $permLevel) && \ModUtil::getVar('MUEternizerModule', 'formposition') == 'menue') {
        			$links[] = [
        					'url' => $this->router->generate('mueternizermodule_entry_edit'),
        					'text' => $this->__('New entry'),
        					'title' => $this->__('Create entry')
        			];
        }
        
        return $links;
	}
}

<?php
/**
 * Eternizer.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package Eternizer
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Sat Dec 31 13:59:03 CET 2011.
 */

/**
 * Selection api implementation class
 */
class Eternizer_Api_Selection extends Eternizer_Api_Base_Selection
{
	    /**
     * Select a list of entities by different criteria.
     *
     * @param string  $args['ot']       The object type to retrieve (optional)
     * @param string  $args['where']    The where clause to use when retrieving the collection (optional) (default='').
     * @param string  $args['orderBy']  The order-by clause to use when retrieving the collection (optional) (default='').
     * @param boolean $args['useJoins'] Whether to include joining related objects (optional) (default=true).
     *
     * @return Array with retrieved collection and amount of total records affected by this query.
     */
    public function getEntities($args)
    {
    	$select = $this->request->getGet()->filter('select', '', FILTER_SANITIZE_STRING);
    	if ($select == 'mine') {
    		
    		$args['where'] = Eternizer_Util_Model::getUserId();
    	}
    	
        $type = $this->request->getGet()->filter('type', '', FILTER_SANITIZE_STRING);
    	    	
    	if ($type == 'user' || $type = '') {
    		if ($args['where'] != '')
    		{
    			$args['where'] .= ' AND ';
    		}
    	
    		if ($args['where'] != '')
    		{    	
    			$args['where'] .= Eternizer_Util_Model::entryAllowed();
    		}
    		else
    		{
    			$args['where'] = Eternizer_Util_Model::entryAllowed();
    		}
    	}
    	
    	return parent::getEntities($args);
    }

        /**
     * Select a list of entities by different criteria.
     *
     * @param string  $args['ot']             The object type to retrieve (optional)
     * @param string  $args['where']          The where clause to use when retrieving the collection (optional) (default='').
     * @param string  $args['orderBy']        The order-by clause to use when retrieving the collection (optional) (default='').
     * @param integer $args['currentPage']    Where to start selection
     * @param integer $args['resultsPerPage'] Amount of items to select
     * @param boolean $args['useJoins']       Whether to include joining related objects (optional) (default=true).
     *
     * @return Array with retrieved collection and amount of total records affected by this query.
     */
    public function getEntitiesPaginated($args)
    {
        $select = $this->request->getGet()->filter('select', '', FILTER_SANITIZE_STRING);
    	if ($select == 'mine') {
    		
    		$args['where'] = Eternizer_Util_Model::getUserId();
    	}
    	
    	$type = $this->request->getGet()->filter('type', '', FILTER_SANITIZE_STRING);
    	    	
    	if ($type == 'user' || $type == '') {
    		if ($args['where'] != '')
    		{
    			$args['where'] .= ' AND ';
    		}
    	
    		if ($args['where'] != '')
    		{    	
    			$args['where'] .= Eternizer_Util_Model::entryAllowed();
    		}
    		else
    		{
    			$args['where'] = Eternizer_Util_Model::entryAllowed();
    		}
    	}
    	return parent::getEntitiesPaginated($args);
    }
    
}

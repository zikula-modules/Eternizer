<?php
/**
 * Eternizer.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace MU\EternizerModule\Api;

use MU\EternizerModule\Api\Base\UserApi as BaseUserApi;

/**
 * This is the User api helper class.
 */
class UserApi extends BaseUserApi
{
    /**
     * get available User panel links
     *
     * @return array Array of admin links
     */
    public function getLinks()
    {
        $links = array();
        $router = $this->get('router');
        $request = $this->get('request');

        if (SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_ADMIN)) {
            $links[] = array('url' => ModUtil::url($this->name, 'admin', 'main'),
                'text' => $this->__('Backend'),
                'title' => $this->__('Switch to administration area.'),
                'class' => 'z-icon-es-options');
        }
        if (SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_READ)) {
            $links[] = array('url' => ModUtil::url($this->name, 'user', 'view', array('ot' => 'entry')),
                'text' => $this->__('Entries'),
                'title' => $this->__('Entry list'));
        }
        if (UserUtil::isLoggedIn() == true) {
            if (SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_READ)) {
                $links[] = array('url' => ModUtil::url($this->name, 'user', 'view', array('ot' => 'entry',
                    'select' => 'mine')),
                    'text' => $this->__('My Entries'),
                    'title' => $this->__('View of my entries'));
            }
        }
        $formposition = ModUtil::getVar($this->name, 'formposition');
        if ($formposition == 'menue') {
            if (SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_ADD)) {
                $links[] = array('url' => ModUtil::url($this->name, 'user', 'edit', array('ot' => 'entry')),
                    'text' => $this->__('New Entry'),
                    'title' => $this->__('Make a new entry'));
            } else {
                $dom = ZLanguage::getModuleDomain($this->name);
                return LogUtil::registerError(__('That means, you have no permission to create an entry.', $dom));
            }
        }


        return $links;
    }
}

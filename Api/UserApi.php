<?php
/**
 * Eternizer.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace MU\EternizerModule\Api;

use MU\EternizerModule\Api\Base\UserApi as BaseUserApi;

use ModUtil;
use SecurityUtil;
use UserUtil;

/**
 * This is the User api helper class.
 */
class UserApi extends BaseUserApi
{
    /**
     * get available User panel links
     *
     * @return array Array of admin links
     */
    public function getLinks()
    {
        $links = array();
        $router = $this->get('router');
        $request = $this->get('request');

        if (SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_ADMIN)) {
            $links[] = array('url' => $router->generate('mueternizermodule_admin_index'),
                'text' => $this->__('Backend'),
                'title' => $this->__('Switch to administration area.'),
                'icon' => 'wrench');
        }
        
        $controllerHelper = $this->get('mueternizermodule.controller_helper');
        $utilArgs = array('api' => 'user', 'action' => 'getLinks');
        $allowedObjectTypes = $controllerHelper->getObjectTypes('api', $utilArgs);

        $currentType = $request->query->filter('type', 'entry', false, FILTER_SANITIZE_STRING);
        $currentLegacyType = $request->query->filter('lct', 'user', false, FILTER_SANITIZE_STRING);
        $permLevel = in_array('admin', array($currentType, $currentLegacyType)) ? ACCESS_ADMIN : ACCESS_READ;
        
        if (in_array('entry', $allowedObjectTypes)
            && SecurityUtil::checkPermission($this->name . ':Entry:', '::', $permLevel)) {
            $links[] = array('url' => $router->generate('mueternizermodule_entry_view', array('lct' => 'user')),
                'text' => $this->__('Entries'),
                'title' => $this->__('Entry list'));
        }
        if (UserUtil::isLoggedIn() == true) {
        	if (in_array('entry', $allowedObjectTypes)
            && SecurityUtil::checkPermission($this->name . ':Entry:', '::', $permLevel)) {
            $links[] = array('url' => $router->generate('mueternizermodule_entry_view', array('ot' => 'entry',
                    'select' => 'mine')),
                    'text' => $this->__('My Entries'),
                    'title' => $this->__('View of my entries'));
            }
        }
        $formposition = ModUtil::getVar($this->name, 'formposition');
        if ($formposition == 'menue') {
        	if (in_array('entry', $allowedObjectTypes)
            && SecurityUtil::checkPermission($this->name . ':Entry:', '::', $permLevel)) {
            	$links[] = array('url' => $router->generate('mueternizermodule_entry_edit', array('lct' => 'user')),
                    'text' => $this->__('New Entry'),
                    'title' => $this->__('Make a new entry'));
            } else {
                $dom = ZLanguage::getModuleDomain($this->name);
                return LogUtil::registerError(__('That means, you have no permission to create an entry.', $dom));
            }
        }


        return $links;
    }
}
